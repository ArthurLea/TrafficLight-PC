C51 COMPILER V9.00   MAIN                                                                  03/31/2016 17:14:35 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\Single-Chip-Microcomputer\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include "config.h"
   3          #include "max7219.h"
   4          #include "led.h"
   5          #include "key.h"
   6          #include "uart.h"
   7          #include "infrared_tube.h"
   8          
   9          //串口需要变量
  10          volatile uchar uartState = UART_IDLE;
  11          volatile uint timeout;
  12          volatile uint pointer;
  13          
  14          volatile uchar g_cCommand; 
  15          volatile uchar send_Buf[16] = {0};//通过串口转蓝牙发送给手机的缓冲区
  16          volatile uchar recieve_Buf[16] = {0};//数据接收的缓冲区
  17          /*自动模式,默认各方向均为20s,同时开始以南北方向为准，南北为绿，东西为红
  18           *手动模式,操作者自己设置南北东西方向上的绿灯时间
  19           *注意：南北方向上的绿灯时间和东西方向上的红灯时间相同
  20           *      东西方向上的绿灯时间和南北方向上的红灯时间相同
  21           */
  22          //红绿黄灯时间全局易变变量
  23          volatile uchar Sou_Nor_Red_Time = 5;
  24          volatile uchar Sou_Nor_Green_Time = 5;
  25          volatile uchar Sou_Nor_Yellow_Time = 2;
  26          volatile uchar West_East_Yellow_Time = 2;
  27          
  28          //红绿灯时时间备份
  29          volatile uchar Sou_Nor_Red_Time_Temp;
  30          volatile uchar Sou_Nor_Green_Time_Temp;
  31          
  32          uchar code big_time = 10;//长时间
  33          uchar code small_time = 5;//短时间
  34          
  35          volatile uchar night_flag = 0;//夜晚模式标志
  36          volatile uchar Phone_Set_Finish = 0;//手机设置完毕标记
  37          //外部共享变量
  38          extern uchar stop_flag;//禁止通行标记
  39          extern uchar car_flow_detection_flag;
  40          //车流量检测
  41          volatile uint car_num[4] = {0,0,0,0};//0-东方向上的车流量
  42                                                                                          //1-南方向
  43                                                                                          //2-西方向
  44                                                                                          //3-北方向
  45          extern volatile uchar cycle_nums;//from interrupt.c file   
  46          
  47          //函数声明
  48          void init_register_s52();
  49          void init_Numeric_Display();
  50          void phone_set();
  51          
  52          
  53          int main()
  54          {
  55   1              uchar key_num = 17;/*当前按键值*/
C51 COMPILER V9.00   MAIN                                                                  03/31/2016 17:14:35 PAGE 2   

  56   1              uint run_red_light_result = 0;/*闯红绿灯的结果*/
  57   1              u32 sou_nor_nums = 0;/* 南北方向上的车流量总和*/
  58   1              u32 eas_wes_nums = 0;/* 东西方向上的车流量总和*/
  59   1              uint cycle_time = 0;/* 循环周期的时间*/
  60   1              init_register_s52();
  61   1              init_max7219();
  62   1              quit_led();
  63   1              buzzer();
  64   1      
  65   1              while(1)
  66   1              {        
  67   2                      /*系统开始检测系统模式，当OK键在所有键以及手机控制之前按下时为自动模式,每个方向计时20s
  68   2                       *                                              否则通过其他方式（其他按键或者手机端）设置后再次按下系统启动
  69   2                       *
  70   2                       *开始检测按键或手机远程设置
  71   2                       */
  72   2                      key_num = scankey();
  73   2                      if((key_num==OK) || (Phone_Set_Finish==1))//按键端直接控制，系统正式启动 
  74   2                      {
  75   3                              init_led();
  76   3                              init_Numeric_Display();
  77   3                              TR0 = 1;
  78   3                              while(1)
  79   3                              {
  80   4                                      /*
  81   4                                       *紧急情况模块
  82   4                                       */
  83   4                                      if(stop_flag==1)//紧急情况标记
  84   4                                      {
  85   5                                              buzzer();                         
  86   5                                              all_led_red();
  87   5                                              while(stop_flag)
  88   5                                              {
  89   6                                                      key_num = scankey();
  90   6                                                      if(OK == key_num)
  91   6                                                      {
  92   7                                                              stop_flag = 0;
  93   7                                                              TR0 = 1;//再次启动定时器
  94   7                                                      }
  95   6                                              }
  96   5                                      }
  97   4                                      /*
  98   4                                       * 闯红灯检测模块
  99   4                                       */
 100   4                                       run_red_light_result = run_red_light();
 101   4                                       if(run_red_light_result != 0)
 102   4                                       {
 103   5                                              
 104   5                                              //将闯红灯具体方位数据通过串口转蓝牙传送到手机终端
 105   5                                              //数据CRC封装
 106   5      
 107   5                                              //send_run_red_light_to_phone();
 108   5                                              run_red_light_result = 0;
 109   5                                              buzzer();
 110   5                                       }
 111   4                                      /*
 112   4                                       * 车辆检测模块
 113   4                                       */
 114   4                                      /*得到每个方向上的车流量储存到car_num数组中*/
 115   4                                      car_flow_detection(car_num);
 116   4                                      /*计算南北、东西方向上的车辆数算数平均值，模拟取出整数值*/
 117   4                                      sou_nor_nums = (car_num[1]+car_num[3])/cycle_nums;
C51 COMPILER V9.00   MAIN                                                                  03/31/2016 17:14:35 PAGE 3   

 118   4                                      eas_wes_nums = (car_num[0]+car_num[2])/cycle_nums;
 119   4                                      /*计算循环周期的时间和*/
 120   4                                      cycle_time = Sou_Nor_Green_Time + Sou_Nor_Red_Time + Sou_Nor_Yellow_Time + West_East_Yellow_Time;
 121   4                                      /* 计算车流量*/
 122   4                                      
 123   4                                      //将两个方向上的车流量数据通过串口转蓝牙传送到手机终端
 124   4                                      //数据CRC封装
 125   4                                      //car_num[0]--[3],sou_nor_nums,eas_wes_nums,cycle_nums，cycle_time
 126   4      
 127   4                                      //send_car_flow_to_phone(car_num);
 128   4                                      
 129   4                                      if(car_flow_detection_flag == 1)
 130   4                                      { 
 131   5                                               //模拟改变南北东西方向上的红绿灯时间
 132   5                                               if(Sou_Nor_Green_Time <= small_time)
 133   5                                               {
 134   6                                                      if(sou_nor_nums > 10)//10辆
 135   6                                                              Sou_Nor_Green_Time = big_time;
 136   6                                                      else
 137   6                                                              Sou_Nor_Green_Time = small_time;        
 138   6                                               }
 139   5                                               else if((Sou_Nor_Green_Time>small_time) && Sou_Nor_Green_Time<=big_time)
 140   5                                               {
 141   6                                                      if(sou_nor_nums <= 10)
 142   6                                                              Sou_Nor_Green_Time = small_time; 
 143   6                                                      else
 144   6                                                              Sou_Nor_Green_Time = big_time;
 145   6                                               }
 146   5                                               else if(Sou_Nor_Green_Time > big_time)
 147   5                                               {
 148   6                                                      if(sou_nor_nums <= 20)
 149   6                                                              Sou_Nor_Green_Time = small_time; 
 150   6                                                      else if((sou_nor_nums>20) && (sou_nor_nums <= 40))
 151   6                                                              Sou_Nor_Green_Time = big_time + 10;
 152   6                                                      else if((sou_nor_nums>40) && (sou_nor_nums <= 70))
 153   6                                                              Sou_Nor_Green_Time = big_time + 20;
 154   6                                                      else
 155   6                                                              Sou_Nor_Green_Time = 99;
 156   6                                               }
 157   5                                               //其他的正常
 158   5      
 159   5                                               //模拟改变东西东西方向上的红绿灯时
 160   5                                               if(Sou_Nor_Red_Time <= small_time)
 161   5                                               {
 162   6                                                      if(eas_wes_nums > 10)//10辆
 163   6                                                              Sou_Nor_Red_Time = big_time;
 164   6                                                      else
 165   6                                                              Sou_Nor_Red_Time = small_time;  
 166   6                                               }
 167   5                                               else if((Sou_Nor_Red_Time>small_time) && (Sou_Nor_Red_Time<=big_time))
 168   5                                               {
 169   6                                                      if(eas_wes_nums <= 10)
 170   6                                                              Sou_Nor_Red_Time = small_time;
 171   6                                                      else
 172   6                                                              Sou_Nor_Red_Time = big_time; 
 173   6                                               }
 174   5                                               else if(Sou_Nor_Red_Time > big_time)
 175   5                                               {
 176   6                                                      if(eas_wes_nums <= 20)
 177   6                                                              Sou_Nor_Red_Time = small_time; 
 178   6                                                      else if((eas_wes_nums>20) && (eas_wes_nums <= 40))
 179   6                                                              Sou_Nor_Red_Time = big_time + 10;
C51 COMPILER V9.00   MAIN                                                                  03/31/2016 17:14:35 PAGE 4   

 180   6                                                      else if((eas_wes_nums>40) && (eas_wes_nums <= 70))
 181   6                                                              Sou_Nor_Red_Time = big_time + 20;
 182   6                                                      else
 183   6                                                              Sou_Nor_Red_Time = 99;
 184   6                                               } 
 185   5                                               Sou_Nor_Green_Time_Temp = Sou_Nor_Green_Time;
 186   5                                               Sou_Nor_Red_Time_Temp = Sou_Nor_Red_Time;
 187   5      
 188   5                                               car_flow_detection_flag = 0;//自动循环模式标记检测处理结束，置为0      
 189   5                                      }
 190   4                                      if((sou_nor_nums>10000) || (eas_wes_nums>10000))//重置车流量数据，并将循环次数设置为0
 191   4                                      {
 192   5                                              car_num[0] = 0;
 193   5                                              car_num[1] = 0;
 194   5                                              car_num[2] = 0;
 195   5                                              car_num[3] = 0;
 196   5                                              cycle_nums  = 0;
 197   5                                      }
 198   4      
 199   4                                      /*
 200   4                                       * 手机端远程控制模块
 201   4                                       */
 202   4                                       //phone_set();
 203   4                              }
 204   3                      }
 205   2                      /*
 206   2                       *      时间手动设置模块
 207   2                       *  1、下位机按键模块
 208   2                       *  2、手机端命令设置模块
 209   2                       */
 210   2                      //OK键没有按下，此时是用户自己设置各方向的红黄绿灯时间,修改的是对应方向上的绿灯时间
 211   2                      //1、下位机按键模块
 212   2                      if(key_num == SET_SOU_NOR_TIME)//设置南北方向绿灯时间
 213   2                      {
 214   3                              wr_max7219(Addr_Digit2,0x00);    
 215   3                              wr_max7219(Addr_Digit3,0x00);   
 216   3                              set_time(1);//南北      
 217   3                      }
 218   2                      if(key_num == SET_WEST_EAST_TIME)
 219   2                      {
 220   3                              wr_max7219(Addr_Digit0,0x00);    
 221   3                              wr_max7219(Addr_Digit1,0x00);                           
 222   3                              set_time(2);
 223   3                      }
 224   2                      //2、手机端命令设置模块
 225   2                      phone_set();
 226   2              }
 227   1              return 0;
 228   1      }
 229          
 230          /*
 231           * 手机端
 232           */
 233          void phone_set()
 234          {
 235   1              uint i;
 236   1              switch(uartState)
 237   1              {
 238   2                      case UART_IDLE://串口未有数据状态
 239   2                      {
 240   3                              pointer = 0;
 241   3                              timeout = 0;
C51 COMPILER V9.00   MAIN                                                                  03/31/2016 17:14:35 PAGE 5   

 242   3                              g_cCommand = 0;
 243   3                              if(checkByte())  
 244   3                              {  
 245   4                                      recieve_Buf[pointer++] = getByte();   
 246   4                                      uartState = UART_RECEIVE;
 247   4                              }
 248   3                              break;
 249   3                      }
 250   2                      case UART_RECEIVE:
 251   2                      {
 252   3                              timeout++;
 253   3      //                      if ((timeout>0x8000) || (recieve_Buf[(pointer-1)]==0XEF) || (pointer>7) || (pointer >= recieve_Buf[0]
             -))//[0]表示数据长度
 254   3      //                      {
 255   3      //                              uartState = UART_PROCESS; 
 256   3      //                              break;
 257   3      //                      }
 258   3                              if ((timeout>0x8000) || (recieve_Buf[(pointer-1)]=='F') || (pointer>7) || (pointer >= recieve_Buf[0]))/
             -/[0]表示数据长度
 259   3                              {
 260   4                                      uartState = UART_PROCESS; 
 261   4                                      break;
 262   4                              }
 263   3                              if(checkByte())  
 264   3                              {
 265   4                                      recieve_Buf[pointer++] = getByte();
 266   4                                      timeout = 0;
 267   4                                      uartState = UART_RECEIVE;
 268   4                              }
 269   3                              break;
 270   3                      }
 271   2                      case UART_PROCESS:
 272   2                      {
 273   3                              for(i=0; i<pointer;i++)
 274   3                              {
 275   4                                      sendByte(recieve_Buf[i]);
 276   4                                      delay(1);
 277   4                              }
 278   3                              //将手机端接收到的字符串转换为16进制
 279   3                              uartState = UART_IDLE;
 280   3                              g_cCommand = recieve_Buf[1] ; //取出功能命令字
 281   3      //                                      i =     g_cReceBuf[0]-2;
 282   3      //                                      CRCdata = CRC16(g_cReceBuf,i);//进行CRC循环校验
 283   3      
 284   3                              if((timeout<0x8000)/* && (CRCdata==(u16)(g_cReceBuf[i]<<8)+g_cReceBuf[i+1])*/ )
 285   3                              {
 286   4                                      switch(g_cCommand)
 287   4                                      {
 288   5                                              case '1'://设置时间
 289   5                                              {
 290   6                                                      if(recieve_Buf[2] == '1')//设置南北绿灯时间
 291   6                                                      {                                               
 292   7                                                              Sou_Nor_Green_Time = recieve_Buf[3] - '0';//字符的ASCII
 293   7                                                              Sou_Nor_Green_Time_Temp =  Sou_Nor_Green_Time;
 294   7                                                              wr_max7219(Addr_Digit0,max7219_7led_code[Sou_Nor_Green_Time_Temp/10]);   
 295   7                                                              wr_max7219(Addr_Digit1,max7219_7led_code[Sou_Nor_Green_Time_Temp%10]);
 296   7                                                      }
 297   6                                                      if(recieve_Buf[2] == '2')//设置东西绿灯时间
 298   6                                                      {                                                       
 299   7                                                              Sou_Nor_Red_Time = recieve_Buf[3] - '0';
 300   7                                                              Sou_Nor_Red_Time_Temp =  Sou_Nor_Red_Time;
 301   7                                                              wr_max7219(Addr_Digit2,max7219_7led_code[Sou_Nor_Green_Time_Temp/10]);   
C51 COMPILER V9.00   MAIN                                                                  03/31/2016 17:14:35 PAGE 6   

 302   7                                                              wr_max7219(Addr_Digit3,max7219_7led_code[Sou_Nor_Green_Time_Temp%10]);
 303   7                                                      }       
 304   6                                                      break;
 305   6                                              }
 306   5                                              case '2'://禁止通行
 307   5                                                      stop_flag = 1;
 308   5                                                      break;
 309   5                                              case '3'://夜晚模式
 310   5                                                      night_flag = 1;
 311   5                                                      break;
 312   5                                              case '4'://手机确认设置完毕
 313   5                                                      Phone_Set_Finish = 1;
 314   5                                                      break;
 315   5                                      }
 316   4                              }
 317   3                              break;
 318   3                      }
 319   2              } 
 320   1      }
 321          
 322          /*
 323           *初始化52单片机的寄存器，外部中断，定时器，以及相依优先级等
 324           */
 325          void init_register_s52()
 326          {       
 327   1              //CPU查询中断的顺序（INT0->T0->INT1->TI/RI->T2）
 328   1              IE = 0X97;//打开相应中断((EA(总开关)-1))--(不用-0)--(T2-0)--(串行口-1)
 329   1                                                       //--(T1-0)--(INT1-1)--(T0-1)--(INT0-1))
 330   1              TMOD = 0X21;//T1方式2，T0方式1设置（GATE-C/T-M1-M0--GATE-C/T-M1-M0）
 331   1              IT0 = 1;//INT0下降沿有效
 332   1              IT1 = 1;//下降沿有效
 333   1              TL1 = 0XFD;
 334   1              TH0 = 0X4C;//定时器
 335   1              TL0 = 0X00;
 336   1              //TR0 = 1;//启动定时器
 337   1              
 338   1              TH1 = 0XFD;//波特率9600,SMOD不加倍
 339   1              TL1 = 0XFD;
 340   1              TR1 = 1;//启动T1
 341   1              SCON = 0X50;//串口方式，方式1，允许接收
 342   1      
 343   1              PS = 1; //串行口优先级
 344   1              PX0 = 1; 
 345   1              PX1 = 1;//INT1中断优先级
 346   1              //IP = 0X21;//(不用-不用-T2-串行口-T1-INT1-T0-INT0)
 347   1              Sou_Nor_Red_Time_Temp = Sou_Nor_Red_Time;
 348   1              Sou_Nor_Green_Time_Temp = Sou_Nor_Green_Time;
 349   1      }
 350          
 351          /*
 352           *初始化数码管显示数字,以南北为基准显示，也就是显示的是当前南北通行时绿灯时间
 353           */
 354          void init_Numeric_Display()
 355          {
 356   1              wr_max7219(Addr_Digit0,max7219_7led_code[Sou_Nor_Green_Time_Temp/10]);   
 357   1              wr_max7219(Addr_Digit1,max7219_7led_code[Sou_Nor_Green_Time_Temp%10]);
 358   1              wr_max7219(Addr_Digit2,max7219_7led_code[Sou_Nor_Green_Time_Temp/10]);   
 359   1              wr_max7219(Addr_Digit3,max7219_7led_code[Sou_Nor_Green_Time_Temp%10]);
 360   1      }
 361          
 362          
 363          
C51 COMPILER V9.00   MAIN                                                                  03/31/2016 17:14:35 PAGE 7   

 364          
 365          
 366          
 367          
 368          
 369          
 370          
 371          
 372          
 373          
 374          
 375          
 376          
 377          
 378          
 379          
 380          
 381          
 382          
 383          
 384          
 385          
 386          
 387          
 388          
 389          
 390          
 391          
 392          
 393          
 394          
 395          
 396          
 397          
 398          
 399          
 400          
 401          
 402          
 403          
 404          
 405          /*
 406           *将所有用IO口扩展的按键全部清除，置为高电平
 407           */
 408          //void remove_key()
 409          //{
 410          //      West_East_Add_Button = 1;
 411          //      Sou_Nor_Add_Button = 1;
 412          //      SUB_TIME = 1;
 413          //      OK = 1;
 414          //}
 415          /*
 416           *手动控制模式下：设置南北绿灯时间
 417           */
 418          //uchar set_sou_nor_time()
 419          //{
 420          //      uchar count = 20;
 421          //      while(1)
 422          //      {
 423          //              if(Sou_Nor_Add_Button==0)
 424          //              {
 425          //                      buzzer();
C51 COMPILER V9.00   MAIN                                                                  03/31/2016 17:14:35 PAGE 8   

 426          //                      count++;                        
 427          //              }
 428          //              if(SUB_TIME==0)
 429          //              {
 430          //                      buzzer();  
 431          //                      count--;
 432          //              }
 433          //              if(OK == 0)
 434          //              {
 435          //                      delay(100);
 436          //                      buzzer(); 
 437          //                      break;
 438          //              }
 439          //              remove_key();
 440          //              
 441          //      }
 442          //}
 443          /*
 444           *手动控制模式下：设置东西绿灯时间
 445           */
 446          //uchar set_west_east_time()
 447          //{
 448          //      uchar count = 20;
 449          //      while(1)         
 450          //      {
 451          //              if(West_East_Add_Button==0)
 452          //              {
 453          //                      buzzer(); 
 454          //                      count++;
 455          //              }
 456          //              if(SUB_TIME==0)
 457          //              {
 458          //                      buzzer();
 459          //                      count--;
 460          //              }
 461          //              if(OK == 0)
 462          //              {
 463          //                      delay(100);
 464          //                      buzzer();
 465          //                      break;
 466          //              }
 467          //              remove_key();
 468          //      }
 469          //      return count;   
 470          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1258    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     54      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
